<%-include('../partials/headForm.ejs')%>

<%-include('../partials/header.ejs')%>

<div class="container">
    <div class="form-container">
        <h1 class="form-title">Registro de Usuario</h1>
        
        <form action="/users/register" method="POST" id="registerForm">
            <% if(locals.errores) { %>
                <div class="error-container">
                    <% Object.keys(errores).forEach(key => { %>
                        <p class="error-msg"><%= errores[key].msg %></p>
                    <% }) %>
                </div>
            <% } %>

            <div class="form-content">
                <div class="form-grid">
                    <div class="form-group">
                        <label for="nombre">Nombre: *</label>
                        <input 
                            type="text" 
                            id="nombre" 
                            name="nombre" 
                            required
                            value="<%= locals.oldData ? oldData.nombre : '' %>"
                            placeholder="Ingresa tu nombre"
                            minlength="2"
                            maxlength="100"
                        >
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="form-group">
                        <label for="apellido">Apellido: *</label>
                        <input 
                            type="text" 
                            id="apellido" 
                            name="apellido" 
                            required
                            value="<%= locals.oldData ? oldData.apellido : '' %>"
                            placeholder="Ingresa tu apellido"
                            minlength="2"
                            maxlength="100"
                        >
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="form-group">
                        <label for="email">Correo Electrónico: *</label>
                        <input 
                            type="email" 
                            id="email" 
                            name="email" 
                            required
                            value="<%= locals.oldData ? oldData.email : '' %>"
                            placeholder="ejemplo@email.com"
                        >
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="form-group">
                        <label for="genero">Género: *</label>
                        <select 
                            id="genero" 
                            name="genero" 
                            required
                        >
                            <option value="">Seleccione una opción</option>
                            <option value="masculino" <%= locals.oldData && oldData.genero === 'masculino' ? 'selected' : '' %>>Masculino</option>
                            <option value="femenino" <%= locals.oldData && oldData.genero === 'femenino' ? 'selected' : '' %>>Femenino</option>
                            <option value="otro" <%= locals.oldData && oldData.genero === 'otro' ? 'selected' : '' %>>Otro</option>
                            <option value="prefiero_no_decir" <%= locals.oldData && oldData.genero === 'prefiero_no_decir' ? 'selected' : '' %>>Prefiero no decirlo</option>
                        </select>
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="form-group">
                        <label for="password">Contraseña: *</label>
                        <input 
                            type="password" 
                            id="password" 
                            name="password" 
                            required
                            placeholder="Ingresa tu contraseña"
                            minlength="8"
                        >
                        <div class="invalid-feedback"></div>
                        <small class="form-text text-muted">
                            La contraseña debe tener al menos 8 caracteres, una mayúscula, una minúscula, un número y un carácter especial
                        </small>
                    </div>

                    <div class="form-group">
                        <label for="confirmPassword">Confirmar Contraseña: *</label>
                        <input 
                            type="password" 
                            id="confirmPassword" 
                            name="confirmPassword" 
                            required
                            placeholder="Confirma tu contraseña"
                            minlength="8"
                        >
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="form-group">
                        <label for="imagen">Imagen de Perfil:</label>
                        <input 
                            type="file" 
                            id="imagen" 
                            name="imagen"
                            accept="image/jpeg,image/jpg,image/png,image/gif"
                        >
                        <div class="invalid-feedback"></div>
                        <small class="form-text text-muted">
                            Formatos permitidos: JPEG, JPG, PNG, GIF. Tamaño máximo: 5MB
                        </small>
                    </div>
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn-primary">Registrarse</button>
                <a href="/users/login" class="btn-secondary">¿Ya tienes una cuenta? Inicia Sesión</a>
            </div>
        </form>
    </div>
</div>

<%-include('../partials/footer.ejs')%>

<script src="/javascripts/home.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('registerForm');
    
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Validar formulario
        let isValid = true;
        const requiredFields = form.querySelectorAll('[required]');
        
        requiredFields.forEach(field => {
            if (!field.value.trim()) {
                isValid = false;
                field.classList.add('is-invalid');
                const feedback = field.nextElementSibling;
                if (feedback && feedback.classList.contains('invalid-feedback')) {
                    feedback.textContent = 'Este campo es obligatorio';
                }
            } else {
                field.classList.remove('is-invalid');
                const feedback = field.nextElementSibling;
                if (feedback && feedback.classList.contains('invalid-feedback')) {
                    feedback.textContent = '';
                }
            }
        });

        // Validar contraseñas
        const password = document.getElementById('password');
        const confirmPassword = document.getElementById('confirmPassword');
        
        if (password.value !== confirmPassword.value) {
            isValid = false;
            confirmPassword.classList.add('is-invalid');
            confirmPassword.nextElementSibling.textContent = 'Las contraseñas no coinciden';
        }

        // Validar formato de contraseña
        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
        if (!passwordRegex.test(password.value)) {
            isValid = false;
            password.classList.add('is-invalid');
            password.nextElementSibling.textContent = 'La contraseña debe cumplir con los requisitos especificados';
        }

        // Validar email
        const email = document.getElementById('email');
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email.value)) {
            isValid = false;
            email.classList.add('is-invalid');
            email.nextElementSibling.textContent = 'Por favor, ingresa un email válido';
        }

        // Validar imagen si se seleccionó una
        const imagen = document.getElementById('imagen');
        if (imagen.files.length > 0) {
            const file = imagen.files[0];
            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
            const maxSize = 5 * 1024 * 1024; // 5MB

            if (!allowedTypes.includes(file.type)) {
                isValid = false;
                imagen.classList.add('is-invalid');
                imagen.nextElementSibling.textContent = 'El archivo debe ser una imagen válida (JPEG, JPG, PNG o GIF)';
            } else if (file.size > maxSize) {
                isValid = false;
                imagen.classList.add('is-invalid');
                imagen.nextElementSibling.textContent = 'La imagen no puede superar los 5MB';
            }
        }
        
        if (isValid) {
            form.submit();
        }
    });
});
</script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const themeToggle = document.getElementById("input");
        if (themeToggle) {
            themeToggle.addEventListener("change", changeTheme);
        }
    });
</script>
</html>